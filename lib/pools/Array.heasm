/**
* Array.heasm
*
* manejar arrays de forma facil
*/

/**
* GetArrayLength
*
* obtener la longitud de un array
*
* @param Array el array
* @param GetOn donde lo retornara
*
* @returns GetOn como lo prometi antes
* [[EbfDevelopmentTools-Documentation](https://github.com/ErickStudios/EbfDevelopmentTools/blob/main/LibDoc.md#getarraylength)
*/
tapot GetArrayLength (
    Array::Array,
    GetOn::LET
    )

    __asm set_value_with_value_of_value GetOn,Array

END tapot

/**
* GetArrayItem
*
* esto lo iba a implementar en las instrucciones oficiales de HLVC pero, como ya se puede con los tapot entonces aqui esta
* aparte no pasa nada por que aparte de que se podra ver el codigo y a que se expande tambien no pasa nada con call_tapot, por que
* si algo que no se construyo como una funcion oficial pero lo construyo el mismo que hace las funciones oficiales no se notara la diferencia
*
* obtiene un item de un array
*
* @param PtrTo el puntero al array
* @param Item el item
*
* @returns ReturnOn como el item extraido
* [EbfDevelopmentTools-Documentation](https://github.com/ErickStudios/EbfDevelopmentTools/blob/main/LibDoc.md#getarrayitem)
*/
tapot GetArrayItem (
    _PtrTo_::Array,
    _Item_::LET,
    _ReturnOn_::LET
    )
    
    SetVarWithValue 1 _PtrTo_
    SetVarWithValue 2 _Item_

    _CallOut 17 1

    SetVarWithValue _ReturnOn_ 3

END tapot

/**
* SetArrayItem
*
* cambia el valor de un item de un array
*
* @param PtrTo el puntero al array
* @param Item el item
* @param NewValue el nuevo valor
* [EbfDevelopmentTools-Documentation](https://github.com/ErickStudios/EbfDevelopmentTools/blob/main/LibDoc.md#setarrayitem)
*/
tapot SetArrayItem (
    PtrTo::Array,
    _Item_::LET,
    _NewValue_::LET
    )
    
    SetVarWithValue 1 PtrTo
    SetVar 2 _Item_
    SetVarWithValue 3 _NewValue_

    _CallOut 16 1

END tapot

/**
* PtrSetArrayItem
*
* cambia el valor de un item de un array
*
* @param PtrTo el puntero al array
* @param Item el puntero item
* @param NewValue el nuevo valor
* [EbfDevelopmentTools-Documentation](https://github.com/ErickStudios/EbfDevelopmentTools/blob/main/LibDoc.md#ptrsetarrayitem)
*/
tapot PtrSetArrayItem (
    PtrTo::Array,
    _Item_::LET,
    _NewValue_::LET
    )
    
    SetVarWithValue 1 PtrTo
    SetVarWithValue 2 _Item_
    SetVarWithValue 3 _NewValue_

    _CallOut 16 1

END tapot

/**
* CoppyToArray
*
* copia un item de un array a otro con un elemento
*
* @param PtrTo1 el puntero al array 1
* @param PtrTo2 el puntero al array 2
* @param Item1 el item 1
* @param Item2 el item 2
* [EbfDevelopmentTools-Documentation](https://github.com/ErickStudios/EbfDevelopmentTools/blob/main/LibDoc.md#coppytoarray)
*/
tapot CoppyToArray (
    _PtrTo1_::Array,
    _PtrTo2_::Array,
    _Item1_::LET,
    _Item2_::LET
    )

    call_tapot GetArrayItem _PtrTo1_ _Item1_ 3
    call_tapot SetArrayItem _PtrTo2_ _Item2_ 3

END tapot

/**
* BufferCmp
*
* una comparacion manual de BufferCmp sin el IF
*
* @param Array1 puntero al array 1
* @param Array2 puntero al array 2
*
* @returns (LET*)256 aunque ya lo maneja if_equal
* [EbfDevelopmentTools-Documentation](https://github.com/ErickStudios/EbfDevelopmentTools/blob/main/LibDoc.md#buffercmp)
*/
tapot BufferCmp (
    _Array1_::Array,
    Array2_::Array
    )

    (LET*)1 = *_Array1_
    (LET*)2 = *Array2_

    _CallOut 24 1

END tapot

/**
* BufferNCmp
*
* una comparacion manual de BufferNCmp sin el IF
*
* @param Array1 puntero al array 1
* @param Array2 puntero al array 2
* @param Len la longitud que compara
*
* @returns (LET*)256 aunque ya lo maneja if_equal
* [EbfDevelopmentTools-Documentation](https://github.com/ErickStudios/EbfDevelopmentTools/blob/main/LibDoc.md#bufferncmp)
*/
tapot BufferNCmp (
    _Array1_::Array,
    Array2_::Array,
    _Len_::LET
    )

    (LET*)1 = *_Array1_
    (LET*)2 = *Array2_
    (LET*)3 = _Len_

    _CallOut 32 1

END tapot


/**
* PtrLenBufferNCmp
*
* una comparacion manual de BufferNCmp sin el IF y con len como puntero
*
* @param Array1 puntero al array 1
* @param Array2 puntero al array 2
* @param Len puntero a la longitud que compara
*
* @returns (LET*)256 aunque ya lo maneja if_equal
* [EbfDevelopmentTools-Documentation](https://github.com/ErickStudios/EbfDevelopmentTools/blob/main/LibDoc.md#ptrlenbufferncmp)
*/
tapot PtrLenBufferNCmp (
    _Array1_::Array,
    Array2_::Array,
    _Len_::LET
    )

    (LET*)1 = *_Array1_
    (LET*)2 = *Array2_
    (LET*)3 = *_Len_

    _CallOut 32 1

END tapot

/**
* ReallocateArray
*
* cambia el tama単o del array
* @param Array el array
* @param OldSize el tama単o antiguo
* @param NewSize el nuevo tama単o
*
* @returns Exception si troleas al sistema y no cambias el tama単o
* @returns Array el nuevo array
*
* el array anterior es elminado asi que clonalo si lo necesitas despues
*/
tapot ReallocateArray (
    _Array_::Array,
    _OldSize_::LET,
    _NewSize_::LET
    )

    (LET*)1 = *_Array_
    (LET*)2 = *_OldSize_
    (LET*)3 = *_NewSize_

    _CallOut 55 1

    _Array_ = *1
END